The ``7-base_geometry`` module

=========================
This is a test file for the BaseGeometry class in the 7-base_geometry module.
Testing the integer_validator method
========================


::

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

::
	>>> m = __import__("7-base_geometry").__doc__
	>>> len(m) > 1
	True

::
	>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
	>>> len(c) > 1
	True

::
    >>> f = __import__("7-base_geometry").BaseGeometry.__init__.__doc__
    >>> len(f) > 1
    True

::
    >>> f = __import__("7-base_geometry").BaseGeometry.area.__doc__
    >>> len(f) > 1
    True

::
    >>> f = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
    >>> len(f) > 1
    True

::

    >>> bg = BaseGeometry(None)
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry() takes no arguments

::

    >>> bg = BaseGeometry()


::

    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

::

    >>> bg.area(1)
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

::

    >>> bg.integer_validator('age', 19)

::

    >>> bg.integer_validator('age', 19.5)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age', 'eyad')
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age')
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

::

    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

::    

    >>> bg.integer_validator('age',[3,4,5])
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age', True)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age',{3})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age',{3: '3'})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age', (1,2))
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age',None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

::

    >>> bg.integer_validator('age',bg)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer


::

    >>> bg.integer_validator('age', 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

::

    >>> print(bg.integer_validator) # doctest: +ELLIPSIS
    <bound method BaseGeometry.integer_validator of <7-base_geometry.BaseGeometry object at...>>

::

    >>> bg.integer_validator('age', 1, 2)
    Traceback (most recent call last):
	...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given
